


startGame(16, 16, 40);

function startGame(width, height, bombsCount) {
    let gameField = document.querySelector('.gameField'); // —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
    let cellsCount = width*height; // –æ–±—à–µ–µ –∫–æ–ª-–≤–æ –∫–ª–µ—Ç–æ–∫
    
    gameField.innerHTML = '<button class="cell"></button>'.repeat(cellsCount); // –¥–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–≤–æ–º—É –ø–æ–ª—é –≤—Å–µ –∫–ª–µ—Ç–∫–∏ <button>

    let cells = [...gameField.children]; // –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∫–ª–µ—Ç–æ–∫ <button>
    // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –±–æ–º–± –≤ –≤–∏–¥–µ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã—Ö —è—á–µ–µ–∫ –∏ –æ–±—Ä–µ–∑–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±–æ–º–±.
    let bombs = [...Array(cellsCount).keys()].sort(()=> Math.random() - 0.5).slice(0, bombsCount);
    let closedCount = cellsCount;

    // –∫–ª–∏–∫ –∏–≥—Ä–æ–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–ª—è
    gameField.addEventListener('click', onCellClick);

    function onCellClick(event) {
        if(event.target.className != "cell") return;

        let index = cells.indexOf(event.target); 
        let column = index % width;
        let row = Math.floor(index / width);
        open(row, column);
    }
    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–µ—Ç–∫–∏ "–±–æ–º–±–∞ –ª–∏ —ç—Ç–æ"
    function isBomb(row, column) {
        if(!isValid(row, column)) return false;
        let cellIndex = row * width + column;
        return bombs.includes(cellIndex);
    }
    function open(row, column) {
        if(!isValid(row, column)) return;

        let index = row * width + column;
        let cell = cells[index];

        if(cell.disabled) return;

        cell.disabled = true;

        if(isBomb(row, column)) {
            cell.innerHTML = "üí£";
            onLoose();
            return;
        }
        closedCount--;
        if(checkForWin()) return;

        let count = getCountOfMinesNearby(row, column);
        if(count !== 0) {
            cell.innerHTML = count;
            return;
        }
        else {
            for(let x = -1; x <= 1; x++) {
                for(let y = -1; y <= 1; y++) {
                    open(row +y, column + x);
                }
            }
        }
    }
    function getCountOfMinesNearby(row, column) {
        let count = 0;
        for(let x = -1; x <= 1; x++) {
            for(let y = -1; y <= 1; y++) {
                if(isBomb(row +y, column + x)) count++;
            }
        }
        return count;
    }
    function isValid(row, column) {
        if(row >=0 && row < height && column >=0 && column < width) return true;
        else return false;
    }
   
    function checkForWin() {
        if(closedCount <= bombsCount) {
            alert("–ü–æ–±–µ–¥–∞!");
            return true;
        }
        else return false;
    }
    function onLoose() {
        alert('–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!');
    }
}